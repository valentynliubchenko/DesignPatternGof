@startuml

    interface ItemElement {
        +accept(visitor : Visitor) : int
    }

    interface Visitor {
        +visit(book : Book) : int
        +visit(video : Video) : int
    }

    class Book {
        -price : int
        -isbnNumber : String
        +Book(cost : int, isbn : String)
        +getPrice() : int
        +getIsbnNumber() : String
        +accept(visitor : Visitor) : int
    }

    class Video {
        -price : int
        -title : String
        +Video(price : int, title : String)
        +getPrice() : int
        +getTitle() : String
        +accept(visitor : Visitor) : int
    }

    class ShoppingCartVisitor implements Visitor {
        +visit(book : Book) : int
        +visit(video : Video) : int
    }

    class ClientVisitor {
        +executeVisitorPattern() : void
        -calculatePrice(items : ItemElement[]) : int
    }

Book -up-|> ItemElement
Video -up-|> ItemElement
ShoppingCartVisitor .up.|> Visitor
ClientVisitor .down.> ItemElement : uses >>
ClientVisitor .down.> Visitor : creates >>

@enduml
